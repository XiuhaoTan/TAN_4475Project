require(tidyverse)
require(data.table)
require(randomForest)
require(mclust)
require(rpart)
require(rpart.plot)
require(foreign)
require(e1071)
require(tidyverse)
require(data.table)
require(randomForest)
require(mclust)
require(rpart)
require(rpart.plot)
require(foreign)
require(e1071)
BankChurners <- read.csv("./Project_Dataset-20250601/Dataset/BankChurners.csv")
BankChurners <- read.csv("./Project_Dataset-20250601/Dataset/BankChurners.csv")
new_custom <- read.csv("./Project_Dataset-20250601/Dataset/new_custom.csv")
new_customer <- read.csv("./Project_Dataset-20250601/Dataset/new_customer.csv")
BankChurners
new_custom
new_customer
BankChurnerscheckNA <- is.na(BankChurners)
BankChurnerscheckNA
new_customcheckNA <- is.na(new_custom)
new_customcheckNA
new_customercheckNA <- is.na(new_customer)
new_customercheckNA
Transform <- BankChurners
Transform$Util_Rank <- sapply(Transform$Avg_Utilization_Ratio, function(x) {
if (x < 0.1) "Excellent"
else if (x < 0.3) "Good"
else if (x < 0.5) "Fair"
else "Poor"
})
Transform
#Summarise the average credit limit by different card type
averageCredit_Limit <- tapply(Transform$Credit_Limit, Transform$Card_Category, mean)
as.data.frame(average_credit_limit)
#Summarise the average credit limit by different card type
averageCredit_Limit <- tapply(Transform$Credit_Limit, Transform$Card_Category, mean)
as.data.frame(averageCredit_Limit)
#count the number of different education level
educationCount <- table(Transform$Education_Level)
as.data.frame(educationCount)
#Summaries Average of Open to buy all Income Category
averageOpen_to_buy <- tapply(Transform$Avg_Open_To_Buy, Transform$Income_Category, mean)
as.data.frame(averageOpen_to_buy)
